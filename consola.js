function sendMessage() {
  var userInput = document.getElementById("user-input").value;
  
  if (userInput !== "") {
    appendMessage("user", userInput);
    handleUserInput(userInput);
    document.getElementById("user-input").value = "";
  }
}

function appendMessage(sender, message) {
  var chatBox = document.getElementById("chat-box");
  var messageElement = document.createElement("div");
  messageElement.classList.add("message", sender === "bot" ? "bot-message" : "user-message");
  messageElement.innerText = message;
  chatBox.appendChild(messageElement);
}

function handleUserInput(message) {
  var botResponse = getBotResponse(message);
  appendMessage("bot", botResponse);
}

function getBotResponse(message) {
  if (message.toLowerCase().includes("hola")) {
    return "¡Hola!\nPuedo en problemas de Investigacion de operaciones tales como:\n\nPorfavor escribe en cual problema puedo ayudarte\n\n•Problema de transporte básico por el metodo de vogel\n\n•Problema de transporte con restricciones de oferta\n\n•Problema de transporte de costes no lineales\n\n•Problema de transporte de rutas múltiples\n\n•Problema por el método de la esquina noroeste\n\n•Problema de transbordo";
  }
  else if (message.toLowerCase().includes("problema 1") || message.toLowerCase().includes("transporte basico") || message.toLowerCase().includes("Problema de transporte básico por el metodo de vogel")) {
    return problema1()
  }
  else if(message.toLowerCase().includes("problema 2") || message.toLowerCase().includes("transporte con restricciones de oferta") || message.toLowerCase().includes("Problema de transporte con restricciones de oferta")){
      return problema2();
  }
  else if (message.toLowerCase().includes("problema 3") || message.toLowerCase().includes("transporte de costes no lineales") || message.toLowerCase().includes("Problema de transporte de costes no lineales")) {

      return problema3();
  }
  else if (message.toLowerCase().includes("problema 4") || message.toLowerCase().includes("transporte de rutas múltiples") || message.toLowerCase().includes("Problema de transporte de rutas múltiples")) {

    return problema4();
}
else if (message.toLowerCase().includes("problema 5") || message.toLowerCase().includes("transporte discreto") || message.toLowerCase().includes("Problema por el método de la esquina noroeste")) {

  return problema5();
}
else if (message.toLowerCase().includes("problema 6") || message.toLowerCase().includes("Problema de transbordo") || message.toLowerCase().includes("Problema de transbordo")) {

  return problema6();
}
  else if (message.toLowerCase().includes("adios")) {
    return "¡Hasta luego! Espero haber sido de ayuda.";
  } else {
    return "Lo siento, no entiendo. ¿Puedes reformular tu pregunta?";

  }
}

function problema1(){
  return "Este tipo de problema se caracteriza por tener una sola fuente y un solo destino, y busca minimizar el costo total de transporte. Para resolverlo, se utiliza una tabla de costos que indica el costo unitario de enviar una unidad del producto desde cada fuente a cada destino. Se puede utilizar el método de la esquina noroeste, el método del costo mínimo o el método del Vogel para encontrar la solución óptima. \nPaso 1: Crear una tabla que muestre los costos unitarios para enviar una unidad del producto desde cada fuente a cada destino. \nPaso 2: Seleccionar la celda con el costo más bajo y asignar la mayor cantidad posible a esa ruta. \nPaso 3: Actualizar las ofertas y demandas restantes, y repetir el paso 2 hasta que se cubran todas las demandas o todas las ofertas. \nPaso 4: Calcular el costo total de transporte y verificar si se ha alcanzado la solución óptima. solución \nSupongamos que tenemos una empresa de fabricación de productos y necesitamos transportar productos desde tres fábricas (A, B, C) a tres almacenes (X, Y, Z). Los costos unitarios de transporte (en dólares por unidad de producto) desde cada fábrica a cada almacén son los siguientes: \nCostos de Transporte (en dólares por unidad de producto): \nAlmacenes \nFábrica A   8    6    10 \nFábrica B   9    12   13 \nFábrica C   14   9    16 \nPaso 1: Calcular los costos de penalización por fila y por columna. \nAhora, para cada fila y columna, tenemos que calcular la diferencia entre el costo más bajo y el segundo costo más bajo. Estos valores son utilizados para determinar qué celdas deben ser asignadas primero. \nPor lo tanto, queda de la siguiente manera. \nPara las Filas: \n• Fila A: |8-6| = 2 \n• Fila B: |9 - 12| = 3 \n• Fila C: |14 – 9| = 5 \nPara las Columnas: \n• Columna X: |8 – 6| = 2 \n• Columna Y: |6 – 9 | = 3 \n• Columna Z: |10 – 13| = 3 \nPaso 2: Asignar la celda con el mayor costo de penalización. \nUna vez ya hemos calculado los costos de penalización por fila y por columna, procedemos a calcular asignando productos en la celda con el mayor costo de penalización. En este caso, la celda con el mayor costo de penalización es la (C, Z) con un costo de 16. \nAsignamos la mayor cantidad posible sin superar las capacidades y demandas: \n• Asignar 30 unidades desde C a Z. \nActualizamos capacidades y demandas: \n• Fábrica C: 0 unidades disponibles. \n• Almacén Z: 20 unidades por entregar. \nPaso 3: Recalcular los costos de penalización.  \nLuego de asignar la celda con el mayor costo de penalización procedemos a recalcular los costos de penalización para las filas y columnas que todavía tienen capacidad o demanda disponible. Esto implica calcular nuevamente las diferencias entre los costos más bajos y segundos más bajos.  \nPara las filas: \n• Fila A: | 8 – 6 | =2 \n• Fila B: |9 – 12 |= 3 \nPara las columnas: \n• Columna X: | 8 – 6| = 2 \n• Columna Y: | 6 – 9| = 3 \nPaso 4 y último: \nRepetir los pasos 2 y 3 hasta que todas las capacidades y demandas se satisfagan. \nContinuamos asignando productos en la celda con el mayor costo de penalización y recalculando los costos de penalización hasta que todas las capacidades y demandas se satisfagan. \nRepetimos los pasos 2 y 3 asignando productos en la celda (A, Y) y luego en la celda (B, X). Luego, realiza una última asignación en la celda (C, X). Esto garantiza que todas las capacidades y demandas se satisfagan. \nDespués de completar estas asignaciones, habrás obtenido una solución inicial factible utilizando el Método de Aproximación de Vogel. A continuación, se muestra la distribución de productos: \n- De A a X: 50 unidades \n- De A a Y: 0 unidades \n- De A a Z: 0 unidades \n- De B a X: 0 unidades \n- De B a Y: 30 unidades \n- De B a Z: 20 unidades \n- De C a X: 0 unidades \n- De C a Y: 0 unidades \n- De C a Z: 30 unidades";
}

function problema2(){
  return "Este tipo de problema se caracteriza por tener varias fuentes y un solo destino, y busca minimizar el costo total de transporte respetando las restricciones de oferta. Para resolverlo,se utiliza una tabla de costos y una tabla de oferta que indica la cantidad disponible de producto en cada fuente. Se puede utilizar el método de la esquina noroeste, el método del costo mínimo o el método del vogel para encontrar la solución óptima.- Paso 1: Crear una tabla que muestre los costos unitarios para enviar una unidad del producto desde cada fuente a cada destino. - Paso 2: Verificar si las ofertas totales son iguales a la demanda total. Si no lo son, ajustar las ofertas o demandas para que sean iguales. - Paso 3: Seleccionar la celda con el costo más bajo y asignar la mayor cantidad posible a esa ruta, respetando las restricciones de oferta. - Paso 4: Actualizar las ofertas y demandas restantes, y repetir el paso 3 hasta que se cubran todas las demandas o todas las ofertas. - Paso 5: Calcular el costo total de transporte y verificar si se ha alcanzado la solución óptima. Tenemos 4 trabajadores en este caso los llamaremos Andrés, Beto, Cristóbal y Daniel y tienen 4 tareas en este caso les colocaremos W, X, Y, Z que deben realizar. Cada trabajador cuenta con una habilidad para realizar cada tarea asignada, y esta habilidad se mide en una escala de0 a 10. Para asignarles la tarea a los trabajadores de manera que se maximice la habilidad total asignada, pero debemos tomar en cuenta las siguientes restricciones adicionales:Cada tarea debe ser asignada a exactamente un trabajador.Cada tarea debe ser asignada a exactamente un trabajadorAlgunas tareas tienen restricciones de disponibilidad de trabajadores. Por ejemplo, la tarea X solo puede ser realizada por los trabajadores A o C. Las habilidades de los trabajadores para cada tarea se muestran en la siguiente tabla: Habilidades de los Trabajadores para las Tareas: W X Y Z A 4 8 7 6 B 7 5 4 8 C 6 9 3 7 D 5 6 8 4 DESARROLLO: Paso 1: Preparación de la tabla de costos: Construye una tabla de costos donde cada celda represente la habilidad del trabajador para realizar una tarea. Además, considera que debes convertir el problema de maximización en uno de minimización. Esto se logra restando el valor de la habilidad de 10 (el valor máximo en la escala de habilidades) en cada celda. Así, los valores más altos se convierten en valores más bajos, que es lo que busca el método húngaro. Tabla de costos (valores negativos): W X Y Z A -6 -2 -3 -4 B -3 -5 -6 -2 C -4 -1 -7 -3 D -5 -4 -2 -6  Paso 2: Encuentra la matriz de costos reducida: Para cada fila, resta el valor mínimo de esa fila a cada elemento de esa fila. Para cada columna, resta el valor mínimo de esa columna a cada elemento de esa columna. Tabla de costos reducida: W X Y Z A 0 4 3 0 B 0 0 0 4 C 2 0 4 0 D 0 1 5 0 Paso 3: Encuentra el número mínimo de líneas necesarias para cubrir todos los ceros en la matriz de costos reducida: En este caso, necesitarás dos líneas para cubrir todos los ceros. Paso 4: Encuentra la diferencia mínima (menor número no cubierto por las líneas) en la matriz de costos reducida: La diferencia mínima es 1. Paso 5: Resta la diferencia mínima a todos los elementos no cubiertos y suma la diferencia mínima a las intersecciones de las líneas: Tabla de costos reducida actualizada:W X Y Z A 0 3 2 0 B 0 0 0 3 C 1 0 3 0 D 0 0 4 0 Paso 6: Repite el proceso de encontrar líneas, diferencia mínima y actualización hasta que todos los ceros estén cubiertos: En este caso, al repetir el proceso, todos los ceros se cubrirán. Entonces, ya no necesitas agregar más líneas ni actualizar la matriz. Paso 7: Realiza la asignación óptima: Puedes asignar las tareas a los trabajadores de acuerdo con la matriz actualizada. Cada celda que tenga un cero representa la asignación óptima. Asignación óptima: Trabajador A realiza la tarea Y (2 habilidad). Trabajador B realiza la tarea Z (3 habilidad).Trabajador C realiza la tarea W (1 habilidad). Trabajador D realiza la tarea X (0 habilidad).La habilidad total asignada es 6 (2 + 3 + 1 + 0). Estos pasos te permitirán resolver el problema utilizando el método húngaro teniendo en cuenta las restricciones adicionales.";
}

function problema3(){
  return "Problema de transporte de costes no lineales: \nUna empresa de logística debe planificar el transporte de productos desde varios almacenes a diferentes destinos. s. Sin embargo, los costos de transporte no son lineales y siguen una función no lineal, como \n(C(x) = a + bx + cx^2 \), donde \ (x \) \nes la cantidad de productos transportados. Cada almacén tiene una  minimizar los costos totales de transporte, teniendo en cuenta la no linealidad de los costos, las restricciones de capacidad de los almacenes y la demanda de los destinos. Desarrolla un modelo de programación matemática para abordar este problema de  transporte con costos no lineales.\n\nDatos del problema\n - Almacén A tiene una capacidad de 100 unidades. \n- Almacén B tiene una capacidad de 150 unidades.\n - Destino X tiene una demanda de 80 unidades.\n- Destino Y tiene una demanda de 120 unidades.\nLos costos de transporte desde cada almacén a cada destino se describen mediante la función no lineal 𝑐(𝑥) = 𝑎 + 𝑏𝑥 + 𝑐(𝑥^2). Los coeficientes a, b y c varían para cada combinación.\n\n𝑎𝐴𝑋 = 10, 𝑏𝐴𝑋 = 4, 𝑐𝐴𝑋 = 0.2 \n\n𝑎𝐴𝑌 = 8, 𝑏𝐴𝑌 = 5, 𝑐𝐴𝑌 = 015\n\n𝑎𝐵𝑋 = 12, 𝑏𝐵𝑋 = 3, 𝑐𝐵𝑋 = 0.25\n\n𝑎𝐵𝑌 = 7, 𝑏𝐴𝐵𝑌 = 6, 𝑐𝐵𝑌 = 0.18\n\nVariables de Decisión\n\n𝑥𝐴𝑋 = 𝐶𝑎𝑛𝑡𝑖𝑑𝑎𝑑 𝑑𝑒 𝑝𝑟𝑜𝑑𝑢𝑐𝑡𝑜𝑠 𝑡𝑟𝑎𝑛𝑠𝑝𝑜𝑟𝑡𝑎𝑑𝑜𝑠 𝑑𝑒𝑠𝑑𝑒 𝑒𝑙 𝐴𝑙𝑚𝑎𝑐é𝑛 𝐴 𝑎𝑙 𝐷𝑒𝑠𝑡𝑖𝑛𝑜 𝑋.\n\n𝑥𝐴𝑌 = 𝐶𝑎𝑛𝑡𝑖𝑑𝑎𝑑 𝑑𝑒 𝑝𝑟𝑜𝑑𝑢𝑐𝑡𝑜𝑠 𝑡𝑟𝑎𝑛𝑠𝑝𝑜𝑟𝑡𝑎𝑑𝑜𝑠 𝑑𝑒𝑠𝑑𝑒 𝑒𝑙 𝐴𝑙𝑚𝑎𝑐é𝑛 𝐴 𝑎𝑙 𝐷𝑒𝑠𝑡𝑖𝑛𝑜 𝑌.\n\n𝑥𝐵𝑋 = 𝐶𝑎𝑛𝑡𝑖𝑑𝑎𝑑 𝑑𝑒 𝑝𝑟𝑜𝑑𝑢𝑐𝑡𝑜𝑠 𝑡𝑟𝑎𝑛𝑠𝑝𝑜𝑟𝑡𝑎𝑑𝑜𝑠 𝑑𝑒𝑠𝑑𝑒 𝑒𝑙 𝐴𝑙𝑚𝑎𝑐é𝑛 𝐴 𝑎𝑙 𝐷𝑒𝑠𝑡𝑖𝑛𝑜 𝑌.\n\n𝑥𝐵𝑌 = 𝐶𝑎𝑛𝑡𝑖𝑑𝑎𝑑 𝑑𝑒 𝑝𝑟𝑜𝑑𝑢𝑐𝑡𝑜𝑠 𝑡𝑟𝑎𝑛𝑠𝑝𝑜𝑟𝑡𝑎𝑑𝑜𝑠 𝑑𝑒𝑠𝑑𝑒 𝑒𝑙 𝐴𝑙𝑚𝑎𝑐é𝑛 𝐵 𝑎𝑙 𝐷𝑒𝑠𝑡𝑖𝑛𝑜 𝑌.\n\nFunción Objetivo\n\nMinimizar el costo de transporte:\n\n𝑚𝑖𝑛𝑖𝑚𝑖𝑧𝑎𝑟 𝑍 = 𝑎𝐴𝑋 + (𝑏𝐴𝑋)(𝑥𝐴𝑋) + (𝑐𝐴𝑋)(𝑥2𝐴𝑋) + 𝑎𝐴𝑌 + (𝑏𝐴𝑌)(𝑥𝐴𝑌)+ (𝑐𝐴𝑌)(𝑥2𝐴𝑌) + 𝑎𝐵𝑋 + (𝑏𝐵𝑋)(𝑥𝐵𝑋) + (𝑐𝐵𝑋)(𝑥+2𝐵𝑋) + 𝑎𝐵𝑌 + (𝑏𝐵𝑌)(𝑥𝐵𝑌) + (𝑐𝐵𝑌)(𝑥2𝐵𝑌)\n\nRestricciones \n\n1. Capacidad de los almacenes\n\n𝑥𝐴𝑋 + 𝑥𝐴𝑌 ≤ 100 (𝐶𝑎𝑝𝑎𝑐𝑖𝑑𝑎𝑑 𝑑𝑒𝑙 𝐴𝑙𝑚𝑎𝑐𝑒𝑛 𝐴)\n\n𝑥𝐵𝑋 + 𝑥𝐵𝑌 ≤ 150 (𝐶𝑎𝑝𝑎𝑐𝑖𝑑𝑎𝑑 𝑑𝑒𝑙 𝐴𝑙𝑚𝑎𝑐𝑒𝑛 𝐵)\n\n2. Demanda de los destinos\n\n𝑥𝐴𝑋 + 𝑥𝐵𝑋 = 80 (𝐷𝑒𝑚𝑎𝑛𝑑𝑎 𝑑𝑒 𝐷𝑒𝑠𝑡𝑖𝑛𝑜 𝑋)\n\n𝑥𝐴𝑌 + 𝑥𝐵𝑌 = 120 (𝐷𝑒𝑚𝑎𝑛𝑑𝑎 𝑑𝑒 𝐷𝑒𝑠𝑡𝑖𝑛𝑜 𝑌)\n\n3. No negatividad\n\n𝑥𝐴𝑋, 𝑥𝐴𝑌, 𝑥𝐵𝑋, 𝑥𝐵𝑌 ≥ 0\n\nEste problema representa un escenario de transporte con costos no lineales y puederesolverse utilizando técnicas de optimización no lineal para encontrar la cantidad óptima de productos a transportar desde cada almacén a cada destino para minimizar los costos totales de transporte.";
}

function problema4(){
  return "Problema de transporte de rutas múltiples:\nUna empresa de mensajería debe planificarla entrega de paquetes desde un centro de distribución a varios destinos.  Cada destinotiene una demanda específica, y la red de transporte permite el uso de múltiples rutas que pueden variar en términos de tiempo y costos. Cada vehículo tiene una capacidad máxima de carga, y es posible utilizar más de una ruta para satisfacer la demanda de un destino.El objetivo es determinar las rutas óptimas para cada vehículo de manera que se minimicen los costos totales de transporte y se satisfagan las demandas de todos los destinos, teniendo en cuenta las capacidades de carga de los vehículos y permitiendo la flexibilidad de rutas múltiples para mejorar la eficiencia del proceso de entrega.Desarrolla un modelo de programación matemática que aborde este problema de transporte con rutas múltiples.\nPara abordar el problema de transporte de rutas múltiples, podemos desarrollar un modelo de programación matemática que permita determinar las rutas óptimas para cada vehículo de manera que se minimicen los costos totales de transporte y se satisfagan las demandas de todos los destinos. Aquí te muestro todos los pasos para resolver este problema:\n\nPaso 1: Definición de parámetros y variables\n\nDefinamos los siguientes parámetros y variables:\n\nConjunto de destinos: D = {1, 2, ..., n}.\n\nConjunto de vehículos: V = {1, 2, ..., m}.\n\nDemanda de cada destino i ∈ D: d_i.\n\nCapacidad máxima de carga de cada vehículo j ∈ V: Q_j.\n\nCosto de transporte por unidad de distancia en la ruta k desde el destino i al destino j: c_ij^k.\n\nDistancia entre el destino i y el destino j: d_ij.\n\nVariable binaria x_ijk que indica si el vehículo j viaja de i a j en la ruta k.\n\nPaso 2: Formulación del modelo \n\nEl objetivo es minimizar los costos totales de transporte, que se pueden expresar de la siguiente manera:\n\n Minimizar Z = Σ(i∈D, j∈D, k∈V) c_ij^k * x_ijk\n\nSujeto a las siguientes restricciones:\n\nCada destino debe ser atendido exactamente una vez por una ruta:Σ(j∈V, k) x_ijk = 1, para todo i ∈ D.\n\nΣ(j∈V, k) x_ijk = 1, para todo i ∈ D.\n\nΣ(i∈D, k) x_0ik = 1, para todo j ∈ V.\n\nΣ(j∈D, k) x_j0k = 1, para todo j ∈ V.\n\nLa demanda de cada destino debe ser satisfecha:\n\nΣ(j∈V, k) Σ(i∈D) d_ix_ijk ≥ d_i, para todo i ∈ D.\n\nLa capacidad máxima de carga de cada vehículo no debe ser excedida:\n\nΣ(i∈D) d_i x_ijk ≤ Q_j, para todo j ∈ V.\n\nNo se pueden realizar rutas entre el mismo destino (evitar ciclos):\n\nx_ii1 = 0, para todo i ∈ D.\n\nLas variables x_ijk son binarias (0 o 1).\n\nPaso 3: Resolución del modelo\n\nUna vez formulado el modelo de programación matemática, puedes utilizar un software de optimización, como CPLEX, Gurobi o PuLP en Python, para resolverlo y encontrar las rutas óptimas para cada vehículo. El software encontrará las variables x_ijk que minimizan los costos totales de transporte, satisfaciendo todas las restricciones.\n\nPaso 4: Interpretación de los resultados\n\nUna vez que el modelo se haya resuelto, obtendrás las rutas óptimas para cada vehículo, que minimizan los costos totales de transporte y satisfacen las demandas de todos los destinos. Puedes usar estos resultados para planificar las entregas de paquetes de manera eficiente.\n\nUna vez que el modelo se haya resuelto, obtendrás las rutas óptimas para cada vehículo, que minimizan los costos totales de transporte y satisfacen las demandas de todos los destinos. Puedes usar estos resultados para planificar las entregas de paquetes de manera eficiente.";
}
function problema5(){
  return "5. Problema de transporte discreto/ Utilizando el método de la esquina noroeste:\nSupongamos que una empresa tiene tres plantas productoras ubicadas en las provincias de Esmeraldas, Manabí y Guayas, y desea surtir sus productos a sus principales clientes ubicados en las provincias de Sucumbíos, Orellana y Pastaza. El objetivo es minimizar los costos de transporte.\nPara resolver el problema de transporte utilizando el método de la esquina noroeste, primero debes tener la matriz de costos y las capacidasasades de producción y demanda para cada planta y cliente. Supongamos que tienes la siguiente información:\nMatriz de costos (en dólares por unidad):\n\nClientes\n\nsucumbios Orellana Pastaza\n\nPlantas\n\nEsmeraldas 12 15 17\n\nManabí 14 11 13\n\nGuayas 10 9 10\n\n Capacidades de producción:\n\n•Esmeraldas:40 unidades\n\n•Manabí:50 unidades\n\n•Guayas: 30 unidades\n\nCapacidades de demanda:\n\n• sucumbios: 20 unidades\n\n• Orellana: 30 unidades\n\n• Pastaza: 40 unidades\n\nAhora, apliquemos el método de la esquina noroeste:\n\n1. Comenzamos en la esquina superior izquierda de la matriz (Esmeraldas a Sucumbios) y asignamos la máxima cantidad posible, que es 20 unidades.\n2. Restamos la asignación de la capacidad de producción y demanda disponible. Ahora, las capacidades restantes son las siguientes:\n\n• Esmeraldas: 20 unidades\n\n•Manabí: 40 unidades\n\• Guayas: 20 unidades\n\n• Sucumbios: 0 unidades (satisfecha)\n\n• Orellana: 30 unidades\n\n• Pastaza: 40 unidades\n\n1. Movemos a la siguiente fila (Esmeraldas a Orellana) y asignamos 30 unidades, ya que es la capacidad de producción de Esmeraldas disponible. Ahora, las capacidades restantes son las siguientes:\n\n• Esmeraldas: 0 unidades (satisfecha)\n\n• Manabí: 40 unidades\n\n• Guayas: 20 unidades\n\n• Sucumbios: 0 unidades (satisfecha)\n\n• Orellana: 0 unidades (satisfecha) \n\n• Pastaza: 40 unidades\n\n1. Continuamos a la siguiente fila (Manabí a Orellana) y asignamos 10 unidades.\n2. Restamos la asignación de la capacidad de producción y demanda disponible:\n\n• Esmeraldas: 0 unidades (satisfecha)\n\n• Manabí: 30 unidades\n\n• Guayas: 20 unidades\n\n• Sucumbios: 0 unidades (satisfecha)\n\n• Orellana: 0 unidades (satisfecha)\n\n• Pastaza: 30 unidades\n\n1. Luego, movemos a la siguiente fila (Manabí a Pastaza) y asignamos 30 unidades.\n2. Restamos la asignación de la capacidad de producción y demanda disponible:\n\n• Esmeraldas: 0 unidades (satisfecha)\n\n• Manabí: 0 unidades (satisfecha)\n\n• Guayas: 20 unidades\n\n• Sucumbios: 0 unidades (satisfecha)\n\n• Orellana: 0 unidades (satisfecha)\n\n• Pastaza: 0 unidades (satisfecha)\n\nAhora todas las capacidades de producción y demanda están satisfechas. La asignación resultante minimiza los costos de transporte y se ve de la siguiente manera:\n\nClientes\n\nSucumbios Orellana Pastaza\n\nPlantas\n\nEsmeraldas 12 15 17\n\nManabí 14 11 13\n\nGuayas 10 9 10\n\nEste es el plan óptimo de transporte que minimiza los costos. En este caso, el costo total de transporte sería la suma de los productos de la matriz de costos y la matriz de asignación:\n\nCosto total = (12 * 20) + (11 * 10) + (13 * 30) + (10 * 20) + (9 * 20) + (10 * 10) = 240 + 110+ 390 + 200 + 180 + 100 = 1220 dólares.";
}
function problema6(){
  return"6. Problema de transbordo:\nUna empresa de logística opera en una red compleja de distribución, donde los productos deben ser transportados desde varios almacenes a diferentes destinos a través de nodos de trasbordo. Cada almacén tiene una oferta limitada, cada destino tiene una demanda específica, y los nodos de trasbordo tienen capacidades limitadas para transferir mercancías entre vehículos.El objetivo es minimizar los costos totales de transporte y trasbordo, teniendo en cuenta las restricciones de oferta, demanda y capacidad. Desarrolla un modelo de programación matemática que determine la asignación óptima de productos desde los almacenes hasta los destinos, utilizando los nodos de trasbordo de manera eficiente para reducir los costos de transporte.\n\nSOLUCION DE PROBLEMA:\n\nPuedes abordar este problema de transbordo utilizando la programación matemática y el método de la red de transporte. Para ello, primero debes definir las variables, las restricciones y la función objetivo. A continuación, se presenta un modelo de programación matemática para resolver este problema:\n\nNotación:\n\n- a = Índice de almacén (almacenes)\n\n- b = Índice de destino (destinos)\n\n- c = Índice de nodo de trasbordo (nodos de trasbordo)\n\n- Oa = Oferta disponible en el almacén a\n\n- Db = Demanda en el destino b\n\n- Cab = Costo de transporte desde el almacén a al destino b\n\n- Tac = Capacidad de transferencia desde el almacén a al nodo de trasbordo c\n\n- Tcb = Capacidad de transferencia desde el nodo de trasbordo c al destino b \n\n- Xab = Cantidad de productos transportados desde el almacén a al destino b \n\n- Yacb = Cantidad de productos transferidos desde el almacén a al nodo de trasbordo c y luego al destino b\n\nVariables de decisión:\n\n- Xab = Cantidad de productos transportados directamente desde el almacén A al destino B\n\n- Y acb = Cantidad de productos transferidos desde el almacén A al nodo de trasbordo C y luego al destino B.\n\nFunción objetivo:\n\n-Minimizar los costos totales de transporte y trasbordo:\n\nMin. Z= ∑a ∑b Cab Xab +∑a∑c∑b (Cac+Ccb)Yacb\n\nRestricciones:\n\n1. Restricciones de oferta: La cantidad transportada desde cada almacén a no puede exceder su oferta disponible:\n\n∑b Xab +∑c ∑b Yacb ≤ Oa\n\n2. Restricciones de demanda: La cantidad entregada en cada destino b debe igualar su demanda:\n\n∑a Xab +∑a ∑c Yacb =Db\n\n3. Restricciones de capacidad de trasbordo en los nodos c:\n\na. La cantidad transferida desde el almacén a al nodo c no puede exceder su capacidad:\n\n∑b Yacb ≤ Tac\n\nb. La cantidad transferida desde el nodo c al destino b no puede exceder su capacidad:\n\n∑a Yacb ≤Tcb\n\n4. Variables de decisión no negativas:\n\nXab ≥0, Yacb≥0\n\nEste modelo de programación matemática permite determinar la asignación óptima de productos desde los almacenes hasta los destinos, utilizando los nodos de trasbordo de manera eficiente para minimizar los costos totales de transporte y trasbordo, cumpliendo con las restricciones de oferta, demanda y capacidad en la red de distribución.";
}